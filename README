Implementation of a easier Syntax for .osb (Osu Storyboard) Files.

Work in Progress!


Prototype Specification:

var sprite = new Sprite("file/path.png");    // Definition

sprite.setPosition(<x>,<y>);                 // Coordinates, Default is Middle (320, 240)
sprite.setSize(<size>);                      // The Size of the Object. Default is 1
sprite.setTrans(<trans>)                     // How Transparent should the Object be? Default is 1
sprite.setLayer(<Layer>);                    // Set the Layer of the object to <Layer>. (Eg. Background, Foreground, ...)
sprite.render(<ms>);                         // In Milliseccounds. Sets the Object to visible + applys all the data at the specific Time. Alternative would be fadeIn
sprite.setRotation(<angle>);                 // In Radiants. Sets the Rotation of the Object


var sprite2 = new Sprite("file/path2.png");
sprite2.copy(sprite);                        // Copys all the Setup Options of sprite to sprite2
sprite2.render(<ms>);     


sprite2.hide(<ms>);                          // Set the Object Visibility to 0 at the specific time. Alternative would be fadeout


// ------------------------------------------------
// Animations

sprite.fadeIn(<ms>, <duration>);             // Like render(), but with a fading Effect (Trans Maximum is what's setted with setTrans)
sprite.fadeOut(<ms>, <duration>);            // Like hide(), but with a fading Effect

sprite.moveTo(<ms>, <duration>, <x>, <y>);   // Moves to Koordinate x,y in duration over time

sprite.resize(<ms>, <duration>, <size>);     // Resizes the Object over the Duration

sprite.fade(<ms>, <duration>, <trans>);      // Fades the Objecto tnew Trans

sprite.rotate(<ms>, <duration>, <rotation>)  // Rotates the Object to the new Angle

// ------------------------------------------------
// Effects

// In oosbl, you can define custom Effects by using the effect-class

var flash = new Effect();                    // Init the Effect
flash.add('render(%ms)');                    // Add Action to Effect Chain
flash.add('fadeOut(%ms + 500, 200)');        // Adds another Action to the Chain, starting 500ms after Effect Start

// %ms is a Placeholder. It will be automaticly Replaced with the <ms>

sprite.addEffect(<ms>, <effect>, <loop>);    // Add the Effect. all %ms are replaced by <ms>. <loop> defines how many times the effect should be repeated

// Loops always start at 0ms. If you want the Effect to start 200ms after the Effect start, use %ms + 200
// Firsttime render() or fadeIn() is not allowed in the Loop. Make sure your object is already rendered once before.
